var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{
					currentUser: _elm_lang$core$Maybe$Just(_p0._0)
				}),
			_1: _elm_lang$core$Platform_Cmd$none
		};
	});
var _user$project$Main$loadUser = _elm_lang$core$Native_Platform.incomingPort(
	'loadUser',
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (email) {
			return A2(
				_elm_lang$core$Json_Decode$andThen,
				function (uid) {
					return A2(
						_elm_lang$core$Json_Decode$andThen,
						function (userGoals) {
							return _elm_lang$core$Json_Decode$succeed(
								{email: email, uid: uid, userGoals: userGoals});
						},
						A2(
							_elm_lang$core$Json_Decode$field,
							'userGoals',
							_elm_lang$core$Json_Decode$list(
								A2(
									_elm_lang$core$Json_Decode$andThen,
									function (goalName) {
										return A2(
											_elm_lang$core$Json_Decode$andThen,
											function (endGoal) {
												return A2(
													_elm_lang$core$Json_Decode$andThen,
													function (progress) {
														return _elm_lang$core$Json_Decode$succeed(
															{goalName: goalName, endGoal: endGoal, progress: progress});
													},
													A2(_elm_lang$core$Json_Decode$field, 'progress', _elm_lang$core$Json_Decode$int));
											},
											A2(_elm_lang$core$Json_Decode$field, 'endGoal', _elm_lang$core$Json_Decode$int));
									},
									A2(_elm_lang$core$Json_Decode$field, 'goalName', _elm_lang$core$Json_Decode$string)))));
				},
				A2(_elm_lang$core$Json_Decode$field, 'uid', _elm_lang$core$Json_Decode$string));
		},
		A2(_elm_lang$core$Json_Decode$field, 'email', _elm_lang$core$Json_Decode$string)));
var _user$project$Main$Model = F2(
	function (a, b) {
		return {currentUser: a, currentGoal: b};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A2(_user$project$Main$Model, _elm_lang$core$Maybe$Nothing, _elm_lang$core$Maybe$Nothing),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$User = F3(
	function (a, b, c) {
		return {email: a, uid: b, userGoals: c};
	});
var _user$project$Main$Goal = F3(
	function (a, b, c) {
		return {goalName: a, endGoal: b, progress: c};
	});
var _user$project$Main$LoadUser = function (a) {
	return {ctor: 'LoadUser', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _user$project$Main$loadUser(_user$project$Main$LoadUser);
};
var _user$project$Main$CreateGoalView = {ctor: 'CreateGoalView'};
var _user$project$Main$createGoalView = A3(
	_mdgriffith$style_elements$Element$row,
	_user$project$Main$CreateGoalView,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A3(
			_mdgriffith$style_elements$Element$el,
			_user$project$Main$CreateGoalView,
			{ctor: '[]'},
			_mdgriffith$style_elements$Element$text('Goal Name')),
		_1: {
			ctor: '::',
			_0: A3(
				_mdgriffith$style_elements$Element$el,
				_user$project$Main$CreateGoalView,
				{ctor: '[]'},
				_mdgriffith$style_elements$Element$text('End Goal')),
			_1: {
				ctor: '::',
				_0: A3(
					_mdgriffith$style_elements$Element$el,
					_user$project$Main$CreateGoalView,
					{ctor: '[]'},
					_mdgriffith$style_elements$Element$text('Current Progess')),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Main$TitleBar = {ctor: 'TitleBar'};
var _user$project$Main$stylesheet = _mdgriffith$style_elements$Style$styleSheet(
	{
		ctor: '::',
		_0: A2(
			_mdgriffith$style_elements$Style$style,
			_user$project$Main$TitleBar,
			{
				ctor: '::',
				_0: _mdgriffith$style_elements$Style_Color$text(_elm_lang$core$Color$white),
				_1: {
					ctor: '::',
					_0: _mdgriffith$style_elements$Style_Color$background(_elm_lang$core$Color$blue),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Font$size(24),
						_1: {ctor: '[]'}
					}
				}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_mdgriffith$style_elements$Style$style,
				_user$project$Main$CreateGoalView,
				{
					ctor: '::',
					_0: _mdgriffith$style_elements$Style_Color$text(_elm_lang$core$Color$blue),
					_1: {
						ctor: '::',
						_0: _mdgriffith$style_elements$Style_Color$background(_elm_lang$core$Color$white),
						_1: {
							ctor: '::',
							_0: _mdgriffith$style_elements$Style_Font$size(16),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	});
var _user$project$Main$userView = function (user) {
	var _p1 = user;
	if (_p1.ctor === 'Nothing') {
		return A3(
			_mdgriffith$style_elements$Element$el,
			_user$project$Main$TitleBar,
			{ctor: '[]'},
			_mdgriffith$style_elements$Element$text('Please Sign in'));
	} else {
		return A3(
			_mdgriffith$style_elements$Element$el,
			_user$project$Main$TitleBar,
			{ctor: '[]'},
			_mdgriffith$style_elements$Element$text(_p1._0.email));
	}
};
var _user$project$Main$view = function (model) {
	return A2(
		_mdgriffith$style_elements$Element$layout,
		_user$project$Main$stylesheet,
		A3(
			_mdgriffith$style_elements$Element$h1,
			_user$project$Main$TitleBar,
			{ctor: '[]'},
			_user$project$Main$userView(model.currentUser)));
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions, view: _user$project$Main$view})();
